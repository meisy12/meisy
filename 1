<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Visualisasi Radiasi Matahari dan Analisis Fourier</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
      body {
        margin: 0;
        overflow: hidden;
        background-color: black;
        color: white;
        font-family: Arial, sans-serif;
      }
      .container {
        position: relative;
        width: 100vw;
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
      }
      .sun {
        position: relative;
        width: 100px;
        height: 100px;
        background-color: yellow;
        border-radius: 1000%;
        box-shadow: 0 0 30px rgba(255, 255, 0, 0.8);
        z-index: 2;
        animation: pulse 5s infinite;
      }
      @keyframes pulse {
        0%,
        100% {
          transform: scale(1);
          box-shadow: 0 0 30px rgba(255, 255, 0, 0.8);
        }
        50% {
          transform: scale(1.1);
          box-shadow: 0 0 50px rgba(255, 255, 0, 1);
        }
      }
      .planet {
        position: absolute;
        border-radius: 90%;
        animation: orbit linear infinite;
        z-index: 1;
      }
      .mercury {
        width: 20px;
        height: 20px;
        background-color: gray;
        animation-duration: 20s; /* Kecepatan orbit Merkurius */
      }
      .venus {
        width: 30px;
        height: 30px;
        background-color: rgba(255, 89, 0, 0.759);
        animation-duration: 15s; /* Kecepatan orbit Venus */
      }
      .earth {
        width: 25px;
        height: 25px;
        background-color: rgb(43, 43, 223);
        animation-duration: 10s; /* Kecepatan orbit Bumi */
      }
      @keyframes orbit {
        0% {
          transform: rotate(0deg) translateX(150px) rotate(0deg);
        }
        100% {
          transform: rotate(360deg) translateX(150px) rotate(-360deg);
        }
      }
      .star {
        position: absolute;
        background-color: white;
        border-radius: 50%;
        opacity: 0.8;
        animation: twinkle 1.5s infinite alternate;
      }
      @keyframes twinkle {
        0% {
          transform: scale(1);
        }
        100% {
          transform: scale(1.5);
        }
      }
      canvas {
        margin: 20px;
        background-color: white;
        border: 1px solid #ccc;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <div class="sun"></div>
      <div class="planet mercury"></div>
      <div class="planet venus"></div>
      <div class="planet earth"></div>
      <div
        class="star"
        style="width: 5px; height: 5px; top: 10%; left: 20%"
      ></div>
      <div
        class="star"
        style="width: 3px; height: 3px; top: 30%; left: 50%"
      ></div>
      <div
        class="star"
        style="width: 4px; height: 4px; top: 70%; left: 80%"
      ></div>
      <div
        class="star"
        style="width: 6px; height: 6px; top: 40%; left: 10%"
      ></div>
      <div
        class="star"
        style="width: 2px; height: 2px; top: 80%; left: 60%"
      ></div>
      <div
        class="star"
        style="width: 5px; height: 5px; top: 20%; left: 90%"
      ></div>
    </div>
    <h1></h1>
  </body>
</html>
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Analisis Integral Fourier</title>
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <style>
      body {
        background-color: black;
        color: white;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
        overflow: hidden;
      }
      #plot {
        width: 80%;
        height: 400px;
      }
    </style>
  </head>
  <body>
    <h1></h1>
    <div id="plot"></div>
    <script>
      // Fungsi untuk menghitung Transformasi Fourier
      function fourierTransform(signal) {
        const N = signal.length;
        const result = new Array(N).fill(0).map(() => new Complex(0, 0));

        for (let k = 0; k < N; k++) {
          for (let n = 0; n < N; n++) {
            const angle = (2 * Math.PI * k * n) / N;
            result[k] = result[k].add(
              new Complex(
                signal[n] * Math.cos(angle),
                -signal[n] * Math.sin(angle)
              )
            );
          }
        }
        return result;
      }

      // Kelas untuk bilangan kompleks
      class Complex {
        constructor(real, imag) {
          this.real = real;
          this.imag = imag;
        }

        add(other) {
          return new Complex(this.real + other.real, this.imag + other.imag);
        }

        magnitude() {
          return Math.sqrt(this.real * this.real + this.imag * this.imag);
        }
      }

      // Sinyal contoh (gelombang sinus)
      const fs = 100; // Frekuensi sampling
      const t = Array.from({ length: fs }, (_, i) => i / fs);
      const signal = t.map((x) => Math.sin(2 * Math.PI * 5 * x)); // Gelombang sinus dengan frekuensi 5 Hz

      // Hitung Transformasi Fourier
      const fourierResult = fourierTransform(signal);
      const frequencies = Array.from(
        { length: fourierResult.length },
        (_, i) => (i * fs) / signal.length
      );
      const magnitudes = fourierResult.map((c) => c.magnitude());

      // Plot hasil
      const trace = {
        x: frequencies,
        y: magnitudes,
        type: "scatter",
        mode: "lines",
        line: { color: "yellow" },
      };

      const layout = {
        title: "Spektrum Frekuensi",
        xaxis: { title: "Frekuensi (Hz)" },
        yaxis: { title: "Magnitudo" },
        paper_bgcolor: "black",
        plot_bgcolor: "black",
        font: { color: "white" },
      };

      Plotly.newPlot("plot", [trace], layout);
    </script>
  </body>
</html>
<!DOCTYPE html>
<html lang="id">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Grafik Persamaan Euler</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
      body {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
        background-color: black;
        color: white;
        font-family: Arial, sans-serif;
      }
      canvas {
        max-width: 900px;
        max-height: 100px;
      }
    </style>
  </head>
  <body>
    <h1>Grafik Persamaan Euler</h1>
    <canvas id="eulerChart"></canvas>
    <script>
      const ctx = document.getElementById("eulerChart").getContext("2d");

      // Data untuk grafik
      const xValues = [];
      const cosValues = [];
      const sinValues = [];

      // Mengisi data untuk x, cos(x), dan sin(x)
      for (let i = -2 * Math.PI; i <= 2 * Math.PI; i += 0.1) {
        xValues.push(i);
        cosValues.push(Math.cos(i));
        sinValues.push(Math.sin(i));
      }

      // Membuat grafik menggunakan Chart.js
      const eulerChart = new Chart(ctx, {
        type: "line",
        data: {
          labels: xValues,
          datasets: [
            {
              label: "cos(x)",
              data: cosValues,
              borderColor: "yellow",
              backgroundColor: "rgba(255, 255, 0, 0.2)",
              fill: true,
            },
            {
              label: "sin(x)",
              data: sinValues,
              borderColor: "cyan",
              backgroundColor: "rgba(0, 255, 255, 0.2)",
              fill: true,
            },
          ],
        },
        options: {
          responsive: true,
          scales: {
            x: {
              title: {
                display: true,
                text: "x (radian)",
              },
            },
            y: {
              title: {
                display: true,
                text: "y",
              },
              min: -1.5,
              max: 1.5,
            },
          },
          plugins: {
            legend: {
              display: true,
              position: "top",
            },
            title: {
              display: true,
              text: "Grafik dari Persamaan Euler: e^(ix) = cos(x) + i*sin(x)",
            },
          },
        },
      });
    </script>
  </body>
</html>
